name: Commit stage

on: [ push ]

env:
    GITHUB_PAT: ${{ secrets.SF4_BOILERPLATE_GHA_PAT }}
    PHPUNIT_ARTIFACT_REPORT_FOLDER: ${{ secrets.CI_ENV_PHPUNIT_ARTIFACT_REPORT_FOLDER }}
    PHPUNIT_ARTIFACT_REPORT_NAME: ${{ secrets.CI_ENV_PHPUNIT_ARTIFACT_REPORT_NAME }}
    COVERAGE: '0'
    PHP_EXTENSIONS: ctype, curl, gd, iconv, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
    PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1

jobs:
    lint-composer:
        runs-on: ubuntu-18.04
        timeout-minutes: 5
        strategy:
            matrix:
                php:
                    - '7.2'
            fail-fast: true

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup php extension cache environment
              id: cache-php-extensions
              uses: shivammathur/cache-extensions@v1
              with:
                  php-version: ${{ matrix.php }}
                  extensions: ${{ env.PHP_EXTENSIONS }}
                  key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

            - name: Cache PHP extensions
              uses: actions/cache@v2
              with:
                  path: ${{ steps.cache-php-extensions.outputs.dir }}
                  key: ${{ steps.cache-php-extensions.outputs.key }}
                  restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: ${{ env.PHP_EXTENSIONS }}
                  ini-values: memory_limit=-1
                  coverage: none
                  tools: composer, composer-normalize, composer-unused, composer-require-checker:2.1.0

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

            - name: Run composer validate
              run: composer validate --strict --ansi

            - name: Run composer normalize
              run: composer-normalize --dry-run --ansi

#            - name: Run composer unused
#              run: composer unused

            - name: Run composer require-checker
              run: |
                  composer require-checker check composer.json



    php-cs-fixer:
        name: Code style check
        runs-on: ubuntu-latest
        timeout-minutes: 20
        strategy:
            matrix:
                php:
                    - '7.2'
            fail-fast: true

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup php extension cache environment
              id: cache-php-extensions
              uses: shivammathur/cache-extensions@v1
              with:
                php-version: ${{ matrix.php }}
                extensions: ${{ env.PHP_EXTENSIONS }}
                key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

            - name: Cache PHP extensions
              uses: actions/cache@v2
              with:
                path: ${{ steps.cache-php-extensions.outputs.dir }}
                key: ${{ steps.cache-php-extensions.outputs.key }}
                restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: ${{ matrix.php }}
                extensions: ${{ env.PHP_EXTENSIONS }}
                ini-values: memory_limit=-1
                coverage: none

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

            - name: Run PHP-CS-Fixer fix
              run: vendor/bin/php-cs-fixer fix --dry-run --diff --ansi


    php-stan:
        name: Static Analysis check (phpstan)
        runs-on: ubuntu-latest
        timeout-minutes: 20
        strategy:
            matrix:
                php:
                    - '7.2'
            fail-fast: true

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup php extension cache environment
              id: cache-php-extensions
              uses: shivammathur/cache-extensions@v1
              with:
                  php-version: ${{ matrix.php }}
                  extensions: ${{ env.PHP_EXTENSIONS }}
                  key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

            - name: Cache PHP extensions
              uses: actions/cache@v2
              with:
                  path: ${{ steps.cache-php-extensions.outputs.dir }}
                  key: ${{ steps.cache-php-extensions.outputs.key }}
                  restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: ${{ env.PHP_EXTENSIONS }}
                  ini-values: memory_limit=-1
                  coverage: none

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

            - name: Run PHP-CS-Fixer fix
              run: vendor/bin/phpstan analyse --ansi


    phpunit:
        name: Code tests (PHP ${{ matrix.php }})
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_ROOT_PASSWORD: symfony
                    MYSQL_DATABASE: symfony
                ports:
                    - 3306/tcp
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            matrix:
                php:
                    - '7.2'
                node:
                    - '10.x'
                include:
                    - php: '7.2'
                      coverage: true
            fail-fast: true

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup php extension cache environment
              id: cache-php-extensions
              uses: shivammathur/cache-extensions@v1
              with:
                  php-version: ${{ matrix.php }}
                  extensions: ${{ env.PHP_EXTENSIONS }}
                  key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

            - name: Cache PHP extensions
              uses: actions/cache@v2
              with:
                  path: ${{ steps.cache-php-extensions.outputs.dir }}
                  key: ${{ steps.cache-php-extensions.outputs.key }}
                  restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: ${{ env.PHP_EXTENSIONS }}
                  ini-values: date.timezone=Europe/Rome, memory_limit=-1
                  coverage: xdebug
                  tools: symfony

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install Composer dependencies
              run: composer install --prefer-dist --no-progress --no-suggest --ansi --no-scripts

#            - name: Run Migration
#              run: |
#                php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
#                php bin/console doctrine:migrations:migrate || echo "No migrations found or migration failed"
#              env:
#                DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

            - name: Enable code coverage
              if: matrix.coverage
              run: echo "COVERAGE=1" >> $GITHUB_ENV

            - name: Install PHPUnit
              run: bin/phpunit install

            - name: Run Unit tests
              #if: ${{ matrix.php == '7.2' }}
              run: |
                mkdir -p reports/phpunit
                if [ "$COVERAGE" = '1' ]; then
                  bin/phpunit --testsuite unit --coverage-clover reports/phpunit/unit-test-clover.xml --log-junit reports/phpunit/unit-test-junit.xml --colors=always
                else
                  bin/phpunit --testsuite unit --colors=always
                fi

            - name: Run Integration tests
              #if: ${{ matrix.php == '7.2' }}
              run: |
                mkdir -p reports/phpunit
                if [ "$COVERAGE" = '1' ]; then
                    bin/phpunit --testsuite integration --coverage-clover reports/phpunit/integration-test-clover.xml --log-junit reports/phpunit/integration-test-junit.xml --colors=always
                else
                    bin/phpunit --testsuite integration --colors=always
                fi
              env:
                DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony

#            - name: Run webserver
#              if: ${{ matrix.php == '7.2' }}
#              run: symfony server:start --port=8080 --dir=public --daemon --no-tls


            - name: Run Functional tests
              #if: ${{ matrix.php == '7.3' }}
              run: |
                mkdir -p reports/phpunit
                if [ "$COVERAGE" = '1' ]; then
                    bin/phpunit --testsuite functional --coverage-clover reports/phpunit/functional-test-clover.xml --log-junit reports/phpunit/functional-test-junit.xml --colors=always
                else
                    bin/phpunit --testsuite functional --colors=always
                fi
              env:
                DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony


    ci-notify:
        name: ci-notify
        needs: [phpunit]
        runs-on: ubuntu-latest
        steps:
            - name: Trigger Publish metrics workflow
              if: success()
              uses: peter-evans/repository-dispatch@v1
              with:
                token: ${{ secrets.GITHUB_TOKEN }}
                repository: ${{ github.repository }}
                event-type: pub-metrics
                client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

